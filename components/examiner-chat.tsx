"use client"

/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/RVyfoRWbged
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { AvatarImage, AvatarFallback, Avatar } from "@/components/ui/avatar"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { useState } from 'react'

type ExaminerChatProps = {
  aiMessage: string;
};

export function ExaminerChat({ aiMessage }: ExaminerChatProps) {
  const [input, setInput] = useState('');
  const [messages, setMessages] = useState([{ sender: 'AI', text: aiMessage }]);
  const [isTyping, setIsTyping] = useState(false);
  
  // Handle input change
  const handleInputChange = (e) => {
    setInput(e.target.value);
  };

  // Handle send button click
  const handleSendMessage = () => {
    if (input.trim()) {
      setMessages([...messages, { sender: 'User', text: input }]);
      setIsTyping(true);
      setInput('');

      // Simulate AI response time
      setTimeout(() => {
        setMessages((prevMessages) => [...prevMessages, { sender: 'AI', text: "Here's the response!" }]);
        setIsTyping(false);
      }, 2000); // 2 seconds delay
    }
  };

  // Shared horizontal padding value to align all elements
  const horizontalPadding = "px-6";

  // Add your AI's initial message here.
  // const aiInitialMessage = "Hello! Let's start with a simple question. What is the capital city of France?";


  return (
    <div className="flex h-screen w-full flex-col bg-white">
      {/* Header section */}
      <div className={`${horizontalPadding} pt-6 pb-4 bg-white shadow`}>
        <h2 className="text-2xl font-semibold">AI Exam Practice</h2>
        <h3 className="text-xl font-semibold mt-4">Question 1</h3>
      </div>

      {/* Chat messages section */}
      <div className="flex-1 p-6 overflow-auto bg-gray-100">
        {messages.map((message, index) => (
          <div key={index} className={`flex flex-row items-start gap-2 mb-4`}>
            {message.sender === 'AI' ? (
              <div className="rounded-full bg-black h-8 w-8 flex items-center justify-center text-white">
                AI
              </div>
            ) : (
              <img
                src="/user_profile_icon.png"
                alt="User"
                className="rounded-full h-8 w-8" // This makes the image rounded
              />
            )}
            <div className="flex flex-col">
              <span className="font-semibold">{message.sender === 'AI' ? 'AI Assistant' : 'You'}</span>
              <div className={`bg-white rounded-lg p-2`}>
                <p>{message.text}</p>
              </div>
            </div>
          </div>
        ))}
        {isTyping && (
          <div className="flex flex-row items-start gap-2 mb-4">
            <div className="rounded-full bg-black h-8 w-8 flex items-center justify-center text-white">AI</div>
            <div className="flex flex-col">
              <span className="font-semibold">AI Assistant</span>
              <div className="bg-white rounded-lg p-2">
                <p>Typing...</p>
              </div>
            </div>
          </div>
        )}
      </div>

      {/* Input and send button section */}
      <div className={`bg-gray-100 shadow-inner`}>
        <div className={`${horizontalPadding} py-4 flex items-center`}>
          <Input
            className={`flex-1 ${isTyping ? 'bg-gray-300' : 'bg-white'}`}
            placeholder="Type your answer here..."
            value={input}
            onChange={handleInputChange}
            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
            disabled={isTyping} // Disable the input field when AI is typing
          />
          <Button 
            className={`ml-4 bg-black text-white hover:bg-white hover:text-black border border-black ${isTyping ? 'opacity-50 cursor-not-allowed' : ''}`}
            onClick={handleSendMessage}
            disabled={isTyping} // Disable the button when AI is typing
          >
            Send
          </Button>
        </div>
      </div>

      {/* Navigation buttons section */}
      <div className={`${horizontalPadding} py-4 bg-white shadow`}>
      <div className="flex justify-between">
          <Button variant="black" className="hover:bg-white hover:text-black border border-black">Previous</Button>
          <Button variant="black" className="hover:bg-white hover:text-black border border-black">Next</Button>
        </div>
      </div>
    </div>
  );
}
